{"ast":null,"code":"import { NUMBER_EQUAL_CONDITIONS } from '../Services.Abstractions/INumberEqualService';\nimport * as i0 from \"@angular/core\";\nclass NumberEqualService {\n  constructor(_conditions) {\n    this._conditions = _conditions;\n  }\n  isEqual(number) {\n    for (const condition of this._conditions) if (condition.isEqual(number) == false) return false;\n    return true;\n  }\n}\nNumberEqualService.ɵfac = function NumberEqualService_Factory(t) {\n  return new (t || NumberEqualService)(i0.ɵɵinject(NUMBER_EQUAL_CONDITIONS));\n};\nNumberEqualService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: NumberEqualService,\n  factory: NumberEqualService.ɵfac\n});\nexport { NumberEqualService };","map":{"version":3,"names":["NUMBER_EQUAL_CONDITIONS","NumberEqualService","constructor","_conditions","isEqual","number","condition","i0","ɵɵinject","factory","ɵfac"],"sources":["C:\\Users\\comp_12_2022\\Desktop\\my-app\\src\\app\\ProductsModule\\Core\\Services\\number-equal.service.ts"],"sourcesContent":["import { Injectable, Inject } from '@angular/core';\r\nimport { INumberEqualCondition, INumberEqualService, NUMBER_EQUAL_CONDITIONS } from '../Services.Abstractions/INumberEqualService';\r\n\r\n@Injectable()\r\nexport class NumberEqualService implements INumberEqualService{\r\n\r\n  constructor(@Inject(NUMBER_EQUAL_CONDITIONS) private _conditions: INumberEqualCondition[]) { }\r\n\r\n  public isEqual(number: number): boolean {\r\n\r\n    for (const condition of this._conditions)\r\n      if (condition.isEqual(number) == false)\r\n        return false;\r\n  \r\n    return true;\r\n  }\r\n}\r\n"],"mappings":"AACA,SAAqDA,uBAAuB,QAAQ,8CAA8C;;AAElI,MACaC,kBAAkB;EAE7BC,YAAqDC,WAAoC;IAApC,KAAAA,WAAW,GAAXA,WAAW;EAA6B;EAEtFC,OAAOA,CAACC,MAAc;IAE3B,KAAK,MAAMC,SAAS,IAAI,IAAI,CAACH,WAAW,EACtC,IAAIG,SAAS,CAACF,OAAO,CAACC,MAAM,CAAC,IAAI,KAAK,EACpC,OAAO,KAAK;IAEhB,OAAO,IAAI;EACb;;AAXWJ,kBAAkB,C;mBAAlBA,kBAAkB,EAAAM,EAAA,CAAAC,QAAA,CAETR,uBAAuB;AAAA;AAFhCC,kBAAkB,C;SAAlBA,kBAAkB;EAAAQ,OAAA,EAAlBR,kBAAkB,CAAAS;AAAA;SAAlBT,kBAAkB"},"metadata":{},"sourceType":"module","externalDependencies":[]}