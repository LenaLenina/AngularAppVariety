{"ast":null,"code":"import * as i0 from \"@angular/core\";\nclass DistinctArrayService {\n  distinct(arr) {\n    const result = [];\n    for (let i = 0; i < arr.length; i++) if (result.indexOf(arr[i]) === -1) result.push(arr[i]);\n    return result;\n  }\n}\nDistinctArrayService.ɵfac = function DistinctArrayService_Factory(t) {\n  return new (t || DistinctArrayService)();\n};\nDistinctArrayService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: DistinctArrayService,\n  factory: DistinctArrayService.ɵfac\n});\nexport { DistinctArrayService };","map":{"version":3,"names":["DistinctArrayService","distinct","arr","result","i","length","indexOf","push","factory","ɵfac"],"sources":["C:\\Users\\comp_12_2022\\Desktop\\my-app\\src\\app\\ProductsModule\\Core\\Services\\distinct-array.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { IDistinctArrayService } from '../../../ArrayExtensions/IDistinctService';\n\n@Injectable()\nexport class DistinctArrayService implements IDistinctArrayService {\n\n  public distinct(arr: number[]): number[] {\n    const result = [];\n\n    for (let i = 0; i < arr.length; i++) \n      if (result.indexOf(arr[i]) === -1)\n        result.push(arr[i]);\n\n    return result;\n  }\n}\n"],"mappings":";AAGA,MACaA,oBAAoB;EAExBC,QAAQA,CAACC,GAAa;IAC3B,MAAMC,MAAM,GAAG,EAAE;IAEjB,KAAK,IAAIC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGF,GAAG,CAACG,MAAM,EAAED,CAAC,EAAE,EACjC,IAAID,MAAM,CAACG,OAAO,CAACJ,GAAG,CAACE,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,EAC/BD,MAAM,CAACI,IAAI,CAACL,GAAG,CAACE,CAAC,CAAC,CAAC;IAEvB,OAAOD,MAAM;EACf;;AAVWH,oBAAoB,C;mBAApBA,oBAAoB;AAAA;AAApBA,oBAAoB,C;SAApBA,oBAAoB;EAAAQ,OAAA,EAApBR,oBAAoB,CAAAS;AAAA;SAApBT,oBAAoB"},"metadata":{},"sourceType":"module","externalDependencies":[]}