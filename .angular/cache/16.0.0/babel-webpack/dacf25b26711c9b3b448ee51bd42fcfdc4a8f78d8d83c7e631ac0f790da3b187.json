{"ast":null,"code":"import { NUMBER_EQUAL_CONDITIONS } from '../Services.Abstractions/INumberEqualService';\nimport * as i0 from \"@angular/core\";\nclass NumberEqualService {\n  constructor(_conditions) {\n    this._conditions = _conditions;\n  }\n  IsEqual(number) {\n    for (const condition of this._conditions) {\n      if (!condition.IsEqual(number)) {\n        return false;\n      }\n    }\n    return true;\n  }\n}\nNumberEqualService.ɵfac = function NumberEqualService_Factory(t) {\n  return new (t || NumberEqualService)(i0.ɵɵinject(NUMBER_EQUAL_CONDITIONS));\n};\nNumberEqualService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: NumberEqualService,\n  factory: NumberEqualService.ɵfac\n});\nexport { NumberEqualService };","map":{"version":3,"names":["NUMBER_EQUAL_CONDITIONS","NumberEqualService","constructor","_conditions","IsEqual","number","condition","i0","ɵɵinject","factory","ɵfac"],"sources":["C:\\Users\\comp_12_2022\\Desktop\\my-app\\src\\app\\ProductsModule\\Core\\Services\\number-equal.service.ts"],"sourcesContent":["import { Injectable, Inject } from '@angular/core';\nimport { INumberEqualCondition, INumberEqualService, NUMBER_EQUAL_CONDITIONS } from '../Services.Abstractions/INumberEqualService';\n\n@Injectable()\nexport class NumberEqualService implements INumberEqualService{\n\n  constructor(@Inject(NUMBER_EQUAL_CONDITIONS) private _conditions: INumberEqualCondition[]) { }\n\n  public IsEqual(number: number): boolean {\n\n    for (const condition of this._conditions) {\n      if (!condition.IsEqual(number)) {\n        return false;\n      }\n    }\n  \n    return true;\n  }\n}\n"],"mappings":"AACA,SAAqDA,uBAAuB,QAAQ,8CAA8C;;AAElI,MACaC,kBAAkB;EAE7BC,YAAqDC,WAAoC;IAApC,KAAAA,WAAW,GAAXA,WAAW;EAA6B;EAEtFC,OAAOA,CAACC,MAAc;IAE3B,KAAK,MAAMC,SAAS,IAAI,IAAI,CAACH,WAAW,EAAE;MACxC,IAAI,CAACG,SAAS,CAACF,OAAO,CAACC,MAAM,CAAC,EAAE;QAC9B,OAAO,KAAK;;;IAIhB,OAAO,IAAI;EACb;;AAbWJ,kBAAkB,C;mBAAlBA,kBAAkB,EAAAM,EAAA,CAAAC,QAAA,CAETR,uBAAuB;AAAA;AAFhCC,kBAAkB,C;SAAlBA,kBAAkB;EAAAQ,OAAA,EAAlBR,kBAAkB,CAAAS;AAAA;SAAlBT,kBAAkB"},"metadata":{},"sourceType":"module","externalDependencies":[]}