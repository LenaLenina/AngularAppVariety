{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"../Services.Abstractions/INumberEqualService\";\n// @Injectable()\n// export class NumberEqualService implements INumberEqualService{\n//   constructor(@Inject(NUMBER_EQUAL_CONDITIONS) private _conditions: INumberEqualCondition[]) { }\n//   public isEqual(number: number): boolean {\n//     for (const condition of this._conditions)\n//       if (condition.isEqual(number) == false)\n//         return false;\n//     return true;\n//   }\n// }\nclass NumberEqualService {\n  constructor(e1, e2) {\n    this.e1 = e1;\n    this.e2 = e2;\n    this._conditions = [e1];\n  }\n  isEqual(number) {\n    for (const condition of this._conditions) if (condition.isEqual(number) == false) return false;\n    return true;\n  }\n}\nNumberEqualService.ɵfac = function NumberEqualService_Factory(t) {\n  return new (t || NumberEqualService)(i0.ɵɵinject(i1.INumberBeetween3And5), i0.ɵɵinject(i1.INumberIsEven));\n};\nNumberEqualService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: NumberEqualService,\n  factory: NumberEqualService.ɵfac\n});\nexport { NumberEqualService };","map":{"version":3,"names":["NumberEqualService","constructor","e1","e2","_conditions","isEqual","number","condition","i0","ɵɵinject","i1","INumberBeetween3And5","INumberIsEven","factory","ɵfac"],"sources":["C:\\Users\\comp_12_2022\\Desktop\\my-app\\src\\app\\ProductsModule\\Core\\Services\\number-equal.service.ts"],"sourcesContent":["import { Injectable, Inject } from '@angular/core';\nimport { INumberBeetween3And5, INumberEqualCondition, INumberEqualService, INumberIsEven } from '../Services.Abstractions/INumberEqualService';\n\n// @Injectable()\n// export class NumberEqualService implements INumberEqualService{\n\n//   constructor(@Inject(NUMBER_EQUAL_CONDITIONS) private _conditions: INumberEqualCondition[]) { }\n\n//   public isEqual(number: number): boolean {\n\n//     for (const condition of this._conditions)\n//       if (condition.isEqual(number) == false)\n//         return false;\n  \n//     return true;\n//   }\n// }\n\n@Injectable()\nexport class NumberEqualService implements INumberEqualService{\n\n  private _conditions: INumberEqualCondition[];\n\n  constructor(private e1: INumberBeetween3And5, private e2: INumberIsEven) { \n    this._conditions = [e1];\n  }\n\n  public isEqual(number: number): boolean {\n    \n    for (const condition of this._conditions)\n      if (condition.isEqual(number) == false)\n        return false;\n  \n    return true;\n  }\n}\n"],"mappings":";;AAGA;AACA;AAEA;AAEA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA,MACaA,kBAAkB;EAI7BC,YAAoBC,EAAwB,EAAUC,EAAiB;IAAnD,KAAAD,EAAE,GAAFA,EAAE;IAAgC,KAAAC,EAAE,GAAFA,EAAE;IACtD,IAAI,CAACC,WAAW,GAAG,CAACF,EAAE,CAAC;EACzB;EAEOG,OAAOA,CAACC,MAAc;IAE3B,KAAK,MAAMC,SAAS,IAAI,IAAI,CAACH,WAAW,EACtC,IAAIG,SAAS,CAACF,OAAO,CAACC,MAAM,CAAC,IAAI,KAAK,EACpC,OAAO,KAAK;IAEhB,OAAO,IAAI;EACb;;AAfWN,kBAAkB,C;mBAAlBA,kBAAkB,EAAAQ,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,oBAAA,GAAAH,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAE,aAAA;AAAA;AAAlBZ,kBAAkB,C;SAAlBA,kBAAkB;EAAAa,OAAA,EAAlBb,kBAAkB,CAAAc;AAAA;SAAlBd,kBAAkB"},"metadata":{},"sourceType":"module","externalDependencies":[]}